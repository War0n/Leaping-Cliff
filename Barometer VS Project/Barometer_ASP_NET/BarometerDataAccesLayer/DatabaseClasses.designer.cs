#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BarometerDataAccesLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LeapingCliff")]
	public partial class DatabaseClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBaroAspect(BaroAspect instance);
    partial void UpdateBaroAspect(BaroAspect instance);
    partial void DeleteBaroAspect(BaroAspect instance);
    partial void InsertBaroTemplate(BaroTemplate instance);
    partial void UpdateBaroTemplate(BaroTemplate instance);
    partial void DeleteBaroTemplate(BaroTemplate instance);
    partial void InsertProject(Project instance);
    partial void UpdateProject(Project instance);
    partial void DeleteProject(Project instance);
    partial void InsertProjectGroup(ProjectGroup instance);
    partial void UpdateProjectGroup(ProjectGroup instance);
    partial void DeleteProjectGroup(ProjectGroup instance);
    partial void InsertProjectMember(ProjectMember instance);
    partial void UpdateProjectMember(ProjectMember instance);
    partial void DeleteProjectMember(ProjectMember instance);
    partial void InsertProjectOwner(ProjectOwner instance);
    partial void UpdateProjectOwner(ProjectOwner instance);
    partial void DeleteProjectOwner(ProjectOwner instance);
    partial void InsertProjectReportDate(ProjectReportDate instance);
    partial void UpdateProjectReportDate(ProjectReportDate instance);
    partial void DeleteProjectReportDate(ProjectReportDate instance);
    partial void InsertReport(Report instance);
    partial void UpdateReport(Report instance);
    partial void DeleteReport(Report instance);
    partial void InsertRol(Rol instance);
    partial void UpdateRol(Rol instance);
    partial void DeleteRol(Rol instance);
    partial void InsertStatus(Status instance);
    partial void UpdateStatus(Status instance);
    partial void DeleteStatus(Status instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public DatabaseClassesDataContext() : 
				base(global::BarometerDataAccesLayer.Properties.Settings.Default.LeapingCliffConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BaroAspect> BaroAspects
		{
			get
			{
				return this.GetTable<BaroAspect>();
			}
		}
		
		public System.Data.Linq.Table<BaroTemplate> BaroTemplates
		{
			get
			{
				return this.GetTable<BaroTemplate>();
			}
		}
		
		public System.Data.Linq.Table<Project> Projects
		{
			get
			{
				return this.GetTable<Project>();
			}
		}
		
		public System.Data.Linq.Table<ProjectGroup> ProjectGroups
		{
			get
			{
				return this.GetTable<ProjectGroup>();
			}
		}
		
		public System.Data.Linq.Table<ProjectMember> ProjectMembers
		{
			get
			{
				return this.GetTable<ProjectMember>();
			}
		}
		
		public System.Data.Linq.Table<ProjectOwner> ProjectOwners
		{
			get
			{
				return this.GetTable<ProjectOwner>();
			}
		}
		
		public System.Data.Linq.Table<ProjectReportDate> ProjectReportDates
		{
			get
			{
				return this.GetTable<ProjectReportDate>();
			}
		}
		
		public System.Data.Linq.Table<Report> Reports
		{
			get
			{
				return this.GetTable<Report>();
			}
		}
		
		public System.Data.Linq.Table<Rol> Rols
		{
			get
			{
				return this.GetTable<Rol>();
			}
		}
		
		public System.Data.Linq.Table<Status> Status
		{
			get
			{
				return this.GetTable<Status>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.add_student_to_group", IsComposable=true)]
		public object add_student_to_group([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentNumber", DbType="Int")] System.Nullable<int> studentNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GroupID", DbType="Int")] System.Nullable<int> groupID)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), studentNumber, groupID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.get_student_procedure")]
		public ISingleResult<get_student_procedureResult> get_student_procedure([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentNr", DbType="Int")] System.Nullable<int> studentNr)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), studentNr);
			return ((ISingleResult<get_student_procedureResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Check_Student_Is_In_Group", IsComposable=true)]
		public System.Nullable<int> Check_Student_Is_In_Group([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> studentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProjectID", DbType="Int")] System.Nullable<int> projectID)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), studentID, projectID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetProjectID", IsComposable=true)]
		public IQueryable<GetProjectIDResult> GetProjectID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> groupID)
		{
			return this.CreateMethodCallQuery<GetProjectIDResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), groupID);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Get_Student", IsComposable=true)]
		public System.Nullable<int> Get_Student([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> studentnumber)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), studentnumber).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetProject", IsComposable=true)]
		public IQueryable<GetProjectResult> GetProject([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> groupID)
		{
			return this.CreateMethodCallQuery<GetProjectResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), groupID);
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BaroAspect")]
	public partial class BaroAspect : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _parent_id;
		
		private int _baro_template_id;
		
		private System.Nullable<byte> _is_head_aspect;
		
		private System.Nullable<byte> _can_be_filled;
		
		private string _name;
		
		private string _desription;
		
		private EntitySet<BaroAspect> _BaroAspects;
		
		private EntitySet<Report> _Reports;
		
		private EntityRef<BaroAspect> _BaroAspect1;
		
		private EntityRef<BaroTemplate> _BaroTemplate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onparent_idChanging(System.Nullable<int> value);
    partial void Onparent_idChanged();
    partial void Onbaro_template_idChanging(int value);
    partial void Onbaro_template_idChanged();
    partial void Onis_head_aspectChanging(System.Nullable<byte> value);
    partial void Onis_head_aspectChanged();
    partial void Oncan_be_filledChanging(System.Nullable<byte> value);
    partial void Oncan_be_filledChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndesriptionChanging(string value);
    partial void OndesriptionChanged();
    #endregion
		
		public BaroAspect()
		{
			this._BaroAspects = new EntitySet<BaroAspect>(new Action<BaroAspect>(this.attach_BaroAspects), new Action<BaroAspect>(this.detach_BaroAspects));
			this._Reports = new EntitySet<Report>(new Action<Report>(this.attach_Reports), new Action<Report>(this.detach_Reports));
			this._BaroAspect1 = default(EntityRef<BaroAspect>);
			this._BaroTemplate = default(EntityRef<BaroTemplate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent_id", DbType="Int")]
		public System.Nullable<int> parent_id
		{
			get
			{
				return this._parent_id;
			}
			set
			{
				if ((this._parent_id != value))
				{
					if (this._BaroAspect1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onparent_idChanging(value);
					this.SendPropertyChanging();
					this._parent_id = value;
					this.SendPropertyChanged("parent_id");
					this.Onparent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baro_template_id", DbType="Int NOT NULL")]
		public int baro_template_id
		{
			get
			{
				return this._baro_template_id;
			}
			set
			{
				if ((this._baro_template_id != value))
				{
					if (this._BaroTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbaro_template_idChanging(value);
					this.SendPropertyChanging();
					this._baro_template_id = value;
					this.SendPropertyChanged("baro_template_id");
					this.Onbaro_template_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_head_aspect", DbType="TinyInt")]
		public System.Nullable<byte> is_head_aspect
		{
			get
			{
				return this._is_head_aspect;
			}
			set
			{
				if ((this._is_head_aspect != value))
				{
					this.Onis_head_aspectChanging(value);
					this.SendPropertyChanging();
					this._is_head_aspect = value;
					this.SendPropertyChanged("is_head_aspect");
					this.Onis_head_aspectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_can_be_filled", DbType="TinyInt")]
		public System.Nullable<byte> can_be_filled
		{
			get
			{
				return this._can_be_filled;
			}
			set
			{
				if ((this._can_be_filled != value))
				{
					this.Oncan_be_filledChanging(value);
					this.SendPropertyChanging();
					this._can_be_filled = value;
					this.SendPropertyChanged("can_be_filled");
					this.Oncan_be_filledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_desription", DbType="VarChar(50)")]
		public string desription
		{
			get
			{
				return this._desription;
			}
			set
			{
				if ((this._desription != value))
				{
					this.OndesriptionChanging(value);
					this.SendPropertyChanging();
					this._desription = value;
					this.SendPropertyChanged("desription");
					this.OndesriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaroAspect_BaroAspect", Storage="_BaroAspects", ThisKey="id", OtherKey="parent_id")]
		public EntitySet<BaroAspect> BaroAspects
		{
			get
			{
				return this._BaroAspects;
			}
			set
			{
				this._BaroAspects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaroAspect_Report", Storage="_Reports", ThisKey="id", OtherKey="baro_aspect_id")]
		public EntitySet<Report> Reports
		{
			get
			{
				return this._Reports;
			}
			set
			{
				this._Reports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaroAspect_BaroAspect", Storage="_BaroAspect1", ThisKey="parent_id", OtherKey="id", IsForeignKey=true)]
		public BaroAspect BaroAspect1
		{
			get
			{
				return this._BaroAspect1.Entity;
			}
			set
			{
				BaroAspect previousValue = this._BaroAspect1.Entity;
				if (((previousValue != value) 
							|| (this._BaroAspect1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BaroAspect1.Entity = null;
						previousValue.BaroAspects.Remove(this);
					}
					this._BaroAspect1.Entity = value;
					if ((value != null))
					{
						value.BaroAspects.Add(this);
						this._parent_id = value.id;
					}
					else
					{
						this._parent_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("BaroAspect1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaroTemplate_BaroAspect", Storage="_BaroTemplate", ThisKey="baro_template_id", OtherKey="id", IsForeignKey=true)]
		public BaroTemplate BaroTemplate
		{
			get
			{
				return this._BaroTemplate.Entity;
			}
			set
			{
				BaroTemplate previousValue = this._BaroTemplate.Entity;
				if (((previousValue != value) 
							|| (this._BaroTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BaroTemplate.Entity = null;
						previousValue.BaroAspects.Remove(this);
					}
					this._BaroTemplate.Entity = value;
					if ((value != null))
					{
						value.BaroAspects.Add(this);
						this._baro_template_id = value.id;
					}
					else
					{
						this._baro_template_id = default(int);
					}
					this.SendPropertyChanged("BaroTemplate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaroAspects(BaroAspect entity)
		{
			this.SendPropertyChanging();
			entity.BaroAspect1 = this;
		}
		
		private void detach_BaroAspects(BaroAspect entity)
		{
			this.SendPropertyChanging();
			entity.BaroAspect1 = null;
		}
		
		private void attach_Reports(Report entity)
		{
			this.SendPropertyChanging();
			entity.BaroAspect = this;
		}
		
		private void detach_Reports(Report entity)
		{
			this.SendPropertyChanging();
			entity.BaroAspect = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BaroTemplate")]
	public partial class BaroTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _template_name;
		
		private System.Nullable<byte> _rating_type;
		
		private System.Nullable<byte> _anonymous;
		
		private EntitySet<BaroAspect> _BaroAspects;
		
		private EntitySet<Project> _Projects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ontemplate_nameChanging(string value);
    partial void Ontemplate_nameChanged();
    partial void Onrating_typeChanging(System.Nullable<byte> value);
    partial void Onrating_typeChanged();
    partial void OnanonymousChanging(System.Nullable<byte> value);
    partial void OnanonymousChanged();
    #endregion
		
		public BaroTemplate()
		{
			this._BaroAspects = new EntitySet<BaroAspect>(new Action<BaroAspect>(this.attach_BaroAspects), new Action<BaroAspect>(this.detach_BaroAspects));
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_template_name", DbType="VarChar(50)")]
		public string template_name
		{
			get
			{
				return this._template_name;
			}
			set
			{
				if ((this._template_name != value))
				{
					this.Ontemplate_nameChanging(value);
					this.SendPropertyChanging();
					this._template_name = value;
					this.SendPropertyChanged("template_name");
					this.Ontemplate_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rating_type", DbType="TinyInt")]
		public System.Nullable<byte> rating_type
		{
			get
			{
				return this._rating_type;
			}
			set
			{
				if ((this._rating_type != value))
				{
					this.Onrating_typeChanging(value);
					this.SendPropertyChanging();
					this._rating_type = value;
					this.SendPropertyChanged("rating_type");
					this.Onrating_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_anonymous", DbType="TinyInt")]
		public System.Nullable<byte> anonymous
		{
			get
			{
				return this._anonymous;
			}
			set
			{
				if ((this._anonymous != value))
				{
					this.OnanonymousChanging(value);
					this.SendPropertyChanging();
					this._anonymous = value;
					this.SendPropertyChanged("anonymous");
					this.OnanonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaroTemplate_BaroAspect", Storage="_BaroAspects", ThisKey="id", OtherKey="baro_template_id")]
		public EntitySet<BaroAspect> BaroAspects
		{
			get
			{
				return this._BaroAspects;
			}
			set
			{
				this._BaroAspects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaroTemplate_Project", Storage="_Projects", ThisKey="id", OtherKey="baro_template_id")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaroAspects(BaroAspect entity)
		{
			this.SendPropertyChanging();
			entity.BaroTemplate = this;
		}
		
		private void detach_BaroAspects(BaroAspect entity)
		{
			this.SendPropertyChanging();
			entity.BaroTemplate = null;
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.BaroTemplate = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.BaroTemplate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project")]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _description;
		
		private string _blok;
		
		private System.Nullable<System.DateTime> _start_date;
		
		private System.Nullable<System.DateTime> _end_date;
		
		private System.Nullable<int> _baro_template_id;
		
		private string _status_name;
		
		private EntitySet<ProjectGroup> _ProjectGroups;
		
		private EntitySet<ProjectOwner> _ProjectOwners;
		
		private EntitySet<ProjectReportDate> _ProjectReportDates;
		
		private EntityRef<BaroTemplate> _BaroTemplate;
		
		private EntityRef<Status> _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnblokChanging(string value);
    partial void OnblokChanged();
    partial void Onstart_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onstart_dateChanged();
    partial void Onend_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onend_dateChanged();
    partial void Onbaro_template_idChanging(System.Nullable<int> value);
    partial void Onbaro_template_idChanged();
    partial void Onstatus_nameChanging(string value);
    partial void Onstatus_nameChanged();
    #endregion
		
		public Project()
		{
			this._ProjectGroups = new EntitySet<ProjectGroup>(new Action<ProjectGroup>(this.attach_ProjectGroups), new Action<ProjectGroup>(this.detach_ProjectGroups));
			this._ProjectOwners = new EntitySet<ProjectOwner>(new Action<ProjectOwner>(this.attach_ProjectOwners), new Action<ProjectOwner>(this.detach_ProjectOwners));
			this._ProjectReportDates = new EntitySet<ProjectReportDate>(new Action<ProjectReportDate>(this.attach_ProjectReportDates), new Action<ProjectReportDate>(this.detach_ProjectReportDates));
			this._BaroTemplate = default(EntityRef<BaroTemplate>);
			this._Status = default(EntityRef<Status>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(50)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blok", DbType="VarChar(50)")]
		public string blok
		{
			get
			{
				return this._blok;
			}
			set
			{
				if ((this._blok != value))
				{
					this.OnblokChanging(value);
					this.SendPropertyChanging();
					this._blok = value;
					this.SendPropertyChanged("blok");
					this.OnblokChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_date", DbType="Date")]
		public System.Nullable<System.DateTime> start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_date", DbType="Date")]
		public System.Nullable<System.DateTime> end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baro_template_id", DbType="Int")]
		public System.Nullable<int> baro_template_id
		{
			get
			{
				return this._baro_template_id;
			}
			set
			{
				if ((this._baro_template_id != value))
				{
					if (this._BaroTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbaro_template_idChanging(value);
					this.SendPropertyChanging();
					this._baro_template_id = value;
					this.SendPropertyChanged("baro_template_id");
					this.Onbaro_template_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_name", DbType="VarChar(20)")]
		public string status_name
		{
			get
			{
				return this._status_name;
			}
			set
			{
				if ((this._status_name != value))
				{
					if (this._Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstatus_nameChanging(value);
					this.SendPropertyChanging();
					this._status_name = value;
					this.SendPropertyChanged("status_name");
					this.Onstatus_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectGroup", Storage="_ProjectGroups", ThisKey="id", OtherKey="project_id")]
		public EntitySet<ProjectGroup> ProjectGroups
		{
			get
			{
				return this._ProjectGroups;
			}
			set
			{
				this._ProjectGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectOwner", Storage="_ProjectOwners", ThisKey="id", OtherKey="project_id")]
		public EntitySet<ProjectOwner> ProjectOwners
		{
			get
			{
				return this._ProjectOwners;
			}
			set
			{
				this._ProjectOwners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectReportDate", Storage="_ProjectReportDates", ThisKey="id", OtherKey="project_id_int")]
		public EntitySet<ProjectReportDate> ProjectReportDates
		{
			get
			{
				return this._ProjectReportDates;
			}
			set
			{
				this._ProjectReportDates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaroTemplate_Project", Storage="_BaroTemplate", ThisKey="baro_template_id", OtherKey="id", IsForeignKey=true)]
		public BaroTemplate BaroTemplate
		{
			get
			{
				return this._BaroTemplate.Entity;
			}
			set
			{
				BaroTemplate previousValue = this._BaroTemplate.Entity;
				if (((previousValue != value) 
							|| (this._BaroTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BaroTemplate.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._BaroTemplate.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._baro_template_id = value.id;
					}
					else
					{
						this._baro_template_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("BaroTemplate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Project", Storage="_Status", ThisKey="status_name", OtherKey="name", IsForeignKey=true)]
		public Status Status
		{
			get
			{
				return this._Status.Entity;
			}
			set
			{
				Status previousValue = this._Status.Entity;
				if (((previousValue != value) 
							|| (this._Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._Status.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._status_name = value.name;
					}
					else
					{
						this._status_name = default(string);
					}
					this.SendPropertyChanged("Status");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProjectGroups(ProjectGroup entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_ProjectGroups(ProjectGroup entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_ProjectOwners(ProjectOwner entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_ProjectOwners(ProjectOwner entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_ProjectReportDates(ProjectReportDate entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_ProjectReportDates(ProjectReportDate entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectGroup")]
	public partial class ProjectGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _group_code;
		
		private System.Nullable<int> _group_end_grade;
		
		private System.Nullable<int> _tutor_user_id;
		
		private int _project_id;
		
		private EntitySet<ProjectMember> _ProjectMembers;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ongroup_codeChanging(string value);
    partial void Ongroup_codeChanged();
    partial void Ongroup_end_gradeChanging(System.Nullable<int> value);
    partial void Ongroup_end_gradeChanged();
    partial void Ontutor_user_idChanging(System.Nullable<int> value);
    partial void Ontutor_user_idChanged();
    partial void Onproject_idChanging(int value);
    partial void Onproject_idChanged();
    #endregion
		
		public ProjectGroup()
		{
			this._ProjectMembers = new EntitySet<ProjectMember>(new Action<ProjectMember>(this.attach_ProjectMembers), new Action<ProjectMember>(this.detach_ProjectMembers));
			this._Project = default(EntityRef<Project>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_code", DbType="VarChar(50)")]
		public string group_code
		{
			get
			{
				return this._group_code;
			}
			set
			{
				if ((this._group_code != value))
				{
					this.Ongroup_codeChanging(value);
					this.SendPropertyChanging();
					this._group_code = value;
					this.SendPropertyChanged("group_code");
					this.Ongroup_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_end_grade", DbType="Int")]
		public System.Nullable<int> group_end_grade
		{
			get
			{
				return this._group_end_grade;
			}
			set
			{
				if ((this._group_end_grade != value))
				{
					this.Ongroup_end_gradeChanging(value);
					this.SendPropertyChanging();
					this._group_end_grade = value;
					this.SendPropertyChanged("group_end_grade");
					this.Ongroup_end_gradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tutor_user_id", DbType="Int")]
		public System.Nullable<int> tutor_user_id
		{
			get
			{
				return this._tutor_user_id;
			}
			set
			{
				if ((this._tutor_user_id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontutor_user_idChanging(value);
					this.SendPropertyChanging();
					this._tutor_user_id = value;
					this.SendPropertyChanged("tutor_user_id");
					this.Ontutor_user_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_id", DbType="Int NOT NULL")]
		public int project_id
		{
			get
			{
				return this._project_id;
			}
			set
			{
				if ((this._project_id != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproject_idChanging(value);
					this.SendPropertyChanging();
					this._project_id = value;
					this.SendPropertyChanged("project_id");
					this.Onproject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectGroup_ProjectMember", Storage="_ProjectMembers", ThisKey="id", OtherKey="project_group_id")]
		public EntitySet<ProjectMember> ProjectMembers
		{
			get
			{
				return this._ProjectMembers;
			}
			set
			{
				this._ProjectMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectGroup", Storage="_Project", ThisKey="project_id", OtherKey="id", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.ProjectGroups.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.ProjectGroups.Add(this);
						this._project_id = value.id;
					}
					else
					{
						this._project_id = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ProjectGroup", Storage="_User", ThisKey="tutor_user_id", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ProjectGroups.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ProjectGroups.Add(this);
						this._tutor_user_id = value.id;
					}
					else
					{
						this._tutor_user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProjectMembers(ProjectMember entity)
		{
			this.SendPropertyChanging();
			entity.ProjectGroup = this;
		}
		
		private void detach_ProjectMembers(ProjectMember entity)
		{
			this.SendPropertyChanging();
			entity.ProjectGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectMember")]
	public partial class ProjectMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _project_group_id;
		
		private int _student_user_id;
		
		private System.Nullable<int> _end_grade;
		
		private EntityRef<ProjectGroup> _ProjectGroup;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onproject_group_idChanging(int value);
    partial void Onproject_group_idChanged();
    partial void Onstudent_user_idChanging(int value);
    partial void Onstudent_user_idChanged();
    partial void Onend_gradeChanging(System.Nullable<int> value);
    partial void Onend_gradeChanged();
    #endregion
		
		public ProjectMember()
		{
			this._ProjectGroup = default(EntityRef<ProjectGroup>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_group_id", DbType="Int NOT NULL")]
		public int project_group_id
		{
			get
			{
				return this._project_group_id;
			}
			set
			{
				if ((this._project_group_id != value))
				{
					if (this._ProjectGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproject_group_idChanging(value);
					this.SendPropertyChanging();
					this._project_group_id = value;
					this.SendPropertyChanged("project_group_id");
					this.Onproject_group_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_user_id", DbType="Int NOT NULL")]
		public int student_user_id
		{
			get
			{
				return this._student_user_id;
			}
			set
			{
				if ((this._student_user_id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstudent_user_idChanging(value);
					this.SendPropertyChanging();
					this._student_user_id = value;
					this.SendPropertyChanged("student_user_id");
					this.Onstudent_user_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_grade", DbType="Int")]
		public System.Nullable<int> end_grade
		{
			get
			{
				return this._end_grade;
			}
			set
			{
				if ((this._end_grade != value))
				{
					this.Onend_gradeChanging(value);
					this.SendPropertyChanging();
					this._end_grade = value;
					this.SendPropertyChanged("end_grade");
					this.Onend_gradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectGroup_ProjectMember", Storage="_ProjectGroup", ThisKey="project_group_id", OtherKey="id", IsForeignKey=true)]
		public ProjectGroup ProjectGroup
		{
			get
			{
				return this._ProjectGroup.Entity;
			}
			set
			{
				ProjectGroup previousValue = this._ProjectGroup.Entity;
				if (((previousValue != value) 
							|| (this._ProjectGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProjectGroup.Entity = null;
						previousValue.ProjectMembers.Remove(this);
					}
					this._ProjectGroup.Entity = value;
					if ((value != null))
					{
						value.ProjectMembers.Add(this);
						this._project_group_id = value.id;
					}
					else
					{
						this._project_group_id = default(int);
					}
					this.SendPropertyChanged("ProjectGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ProjectMember", Storage="_User", ThisKey="student_user_id", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ProjectMembers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ProjectMembers.Add(this);
						this._student_user_id = value.id;
					}
					else
					{
						this._student_user_id = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectOwner")]
	public partial class ProjectOwner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _user_id;
		
		private int _project_id;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onproject_idChanging(int value);
    partial void Onproject_idChanged();
    #endregion
		
		public ProjectOwner()
		{
			this._Project = default(EntityRef<Project>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_id", DbType="Int NOT NULL")]
		public int project_id
		{
			get
			{
				return this._project_id;
			}
			set
			{
				if ((this._project_id != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproject_idChanging(value);
					this.SendPropertyChanging();
					this._project_id = value;
					this.SendPropertyChanged("project_id");
					this.Onproject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectOwner", Storage="_Project", ThisKey="project_id", OtherKey="id", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.ProjectOwners.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.ProjectOwners.Add(this);
						this._project_id = value.id;
					}
					else
					{
						this._project_id = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ProjectOwner", Storage="_User", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ProjectOwners.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ProjectOwners.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectReportDate")]
	public partial class ProjectReportDate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _project_id_int;
		
		private System.Nullable<byte> _is_endreport;
		
		private string _week_label;
		
		private System.Nullable<System.DateTime> _start_date;
		
		private System.Nullable<System.DateTime> _end_date;
		
		private EntitySet<Report> _Reports;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onproject_id_intChanging(int value);
    partial void Onproject_id_intChanged();
    partial void Onis_endreportChanging(System.Nullable<byte> value);
    partial void Onis_endreportChanged();
    partial void Onweek_labelChanging(string value);
    partial void Onweek_labelChanged();
    partial void Onstart_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onstart_dateChanged();
    partial void Onend_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onend_dateChanged();
    #endregion
		
		public ProjectReportDate()
		{
			this._Reports = new EntitySet<Report>(new Action<Report>(this.attach_Reports), new Action<Report>(this.detach_Reports));
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_id_int", DbType="Int NOT NULL")]
		public int project_id_int
		{
			get
			{
				return this._project_id_int;
			}
			set
			{
				if ((this._project_id_int != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproject_id_intChanging(value);
					this.SendPropertyChanging();
					this._project_id_int = value;
					this.SendPropertyChanged("project_id_int");
					this.Onproject_id_intChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_endreport", DbType="TinyInt")]
		public System.Nullable<byte> is_endreport
		{
			get
			{
				return this._is_endreport;
			}
			set
			{
				if ((this._is_endreport != value))
				{
					this.Onis_endreportChanging(value);
					this.SendPropertyChanging();
					this._is_endreport = value;
					this.SendPropertyChanged("is_endreport");
					this.Onis_endreportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_week_label", DbType="VarChar(30)")]
		public string week_label
		{
			get
			{
				return this._week_label;
			}
			set
			{
				if ((this._week_label != value))
				{
					this.Onweek_labelChanging(value);
					this.SendPropertyChanging();
					this._week_label = value;
					this.SendPropertyChanged("week_label");
					this.Onweek_labelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectReportDate_Report", Storage="_Reports", ThisKey="id", OtherKey="project_report_date_id")]
		public EntitySet<Report> Reports
		{
			get
			{
				return this._Reports;
			}
			set
			{
				this._Reports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectReportDate", Storage="_Project", ThisKey="project_id_int", OtherKey="id", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.ProjectReportDates.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.ProjectReportDates.Add(this);
						this._project_id_int = value.id;
					}
					else
					{
						this._project_id_int = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reports(Report entity)
		{
			this.SendPropertyChanging();
			entity.ProjectReportDate = this;
		}
		
		private void detach_Reports(Report entity)
		{
			this.SendPropertyChanging();
			entity.ProjectReportDate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report")]
	public partial class Report : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _reporter_id;
		
		private int _subject_id;
		
		private int _project_report_date_id;
		
		private int _baro_aspect_id;
		
		private System.Nullable<int> _grade;
		
		private string _comment;
		
		private EntityRef<BaroAspect> _BaroAspect;
		
		private EntityRef<ProjectReportDate> _ProjectReportDate;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onreporter_idChanging(int value);
    partial void Onreporter_idChanged();
    partial void Onsubject_idChanging(int value);
    partial void Onsubject_idChanged();
    partial void Onproject_report_date_idChanging(int value);
    partial void Onproject_report_date_idChanged();
    partial void Onbaro_aspect_idChanging(int value);
    partial void Onbaro_aspect_idChanged();
    partial void OngradeChanging(System.Nullable<int> value);
    partial void OngradeChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    #endregion
		
		public Report()
		{
			this._BaroAspect = default(EntityRef<BaroAspect>);
			this._ProjectReportDate = default(EntityRef<ProjectReportDate>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reporter_id", DbType="Int NOT NULL")]
		public int reporter_id
		{
			get
			{
				return this._reporter_id;
			}
			set
			{
				if ((this._reporter_id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onreporter_idChanging(value);
					this.SendPropertyChanging();
					this._reporter_id = value;
					this.SendPropertyChanged("reporter_id");
					this.Onreporter_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject_id", DbType="Int NOT NULL")]
		public int subject_id
		{
			get
			{
				return this._subject_id;
			}
			set
			{
				if ((this._subject_id != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsubject_idChanging(value);
					this.SendPropertyChanging();
					this._subject_id = value;
					this.SendPropertyChanged("subject_id");
					this.Onsubject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_report_date_id", DbType="Int NOT NULL")]
		public int project_report_date_id
		{
			get
			{
				return this._project_report_date_id;
			}
			set
			{
				if ((this._project_report_date_id != value))
				{
					if (this._ProjectReportDate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproject_report_date_idChanging(value);
					this.SendPropertyChanging();
					this._project_report_date_id = value;
					this.SendPropertyChanged("project_report_date_id");
					this.Onproject_report_date_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baro_aspect_id", DbType="Int NOT NULL")]
		public int baro_aspect_id
		{
			get
			{
				return this._baro_aspect_id;
			}
			set
			{
				if ((this._baro_aspect_id != value))
				{
					if (this._BaroAspect.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbaro_aspect_idChanging(value);
					this.SendPropertyChanging();
					this._baro_aspect_id = value;
					this.SendPropertyChanged("baro_aspect_id");
					this.Onbaro_aspect_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grade", DbType="Int")]
		public System.Nullable<int> grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if ((this._grade != value))
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaroAspect_Report", Storage="_BaroAspect", ThisKey="baro_aspect_id", OtherKey="id", IsForeignKey=true)]
		public BaroAspect BaroAspect
		{
			get
			{
				return this._BaroAspect.Entity;
			}
			set
			{
				BaroAspect previousValue = this._BaroAspect.Entity;
				if (((previousValue != value) 
							|| (this._BaroAspect.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BaroAspect.Entity = null;
						previousValue.Reports.Remove(this);
					}
					this._BaroAspect.Entity = value;
					if ((value != null))
					{
						value.Reports.Add(this);
						this._baro_aspect_id = value.id;
					}
					else
					{
						this._baro_aspect_id = default(int);
					}
					this.SendPropertyChanged("BaroAspect");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectReportDate_Report", Storage="_ProjectReportDate", ThisKey="project_report_date_id", OtherKey="id", IsForeignKey=true)]
		public ProjectReportDate ProjectReportDate
		{
			get
			{
				return this._ProjectReportDate.Entity;
			}
			set
			{
				ProjectReportDate previousValue = this._ProjectReportDate.Entity;
				if (((previousValue != value) 
							|| (this._ProjectReportDate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProjectReportDate.Entity = null;
						previousValue.Reports.Remove(this);
					}
					this._ProjectReportDate.Entity = value;
					if ((value != null))
					{
						value.Reports.Add(this);
						this._project_report_date_id = value.id;
					}
					else
					{
						this._project_report_date_id = default(int);
					}
					this.SendPropertyChanged("ProjectReportDate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Report", Storage="_User", ThisKey="reporter_id", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Reports.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Reports.Add(this);
						this._reporter_id = value.id;
					}
					else
					{
						this._reporter_id = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Report1", Storage="_User1", ThisKey="subject_id", OtherKey="id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Reports1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Reports1.Add(this);
						this._subject_id = value.id;
					}
					else
					{
						this._subject_id = default(int);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rol")]
	public partial class Rol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _name;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public Rol()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_User", Storage="_Users", ThisKey="name", OtherKey="rol_name")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Rol = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Rol = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Status")]
	public partial class Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _name;
		
		private EntitySet<Project> _Projects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public Status()
		{
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Project", Storage="_Projects", ThisKey="name", OtherKey="status_name")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Status = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Status = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _student_number;
		
		private string _firstname;
		
		private string _lastname;
		
		private string _profile_image;
		
		private string _email;
		
		private string _rol_name;
		
		private EntitySet<ProjectGroup> _ProjectGroups;
		
		private EntitySet<ProjectMember> _ProjectMembers;
		
		private EntitySet<ProjectOwner> _ProjectOwners;
		
		private EntitySet<Report> _Reports;
		
		private EntitySet<Report> _Reports1;
		
		private EntityRef<Rol> _Rol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onstudent_numberChanging(System.Nullable<int> value);
    partial void Onstudent_numberChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void Onprofile_imageChanging(string value);
    partial void Onprofile_imageChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onrol_nameChanging(string value);
    partial void Onrol_nameChanged();
    #endregion
		
		public User()
		{
			this._ProjectGroups = new EntitySet<ProjectGroup>(new Action<ProjectGroup>(this.attach_ProjectGroups), new Action<ProjectGroup>(this.detach_ProjectGroups));
			this._ProjectMembers = new EntitySet<ProjectMember>(new Action<ProjectMember>(this.attach_ProjectMembers), new Action<ProjectMember>(this.detach_ProjectMembers));
			this._ProjectOwners = new EntitySet<ProjectOwner>(new Action<ProjectOwner>(this.attach_ProjectOwners), new Action<ProjectOwner>(this.detach_ProjectOwners));
			this._Reports = new EntitySet<Report>(new Action<Report>(this.attach_Reports), new Action<Report>(this.detach_Reports));
			this._Reports1 = new EntitySet<Report>(new Action<Report>(this.attach_Reports1), new Action<Report>(this.detach_Reports1));
			this._Rol = default(EntityRef<Rol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_number", DbType="Int")]
		public System.Nullable<int> student_number
		{
			get
			{
				return this._student_number;
			}
			set
			{
				if ((this._student_number != value))
				{
					this.Onstudent_numberChanging(value);
					this.SendPropertyChanging();
					this._student_number = value;
					this.SendPropertyChanged("student_number");
					this.Onstudent_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="VarChar(50)")]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this.OnfirstnameChanging(value);
					this.SendPropertyChanging();
					this._firstname = value;
					this.SendPropertyChanged("firstname");
					this.OnfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="VarChar(50)")]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this.OnlastnameChanging(value);
					this.SendPropertyChanging();
					this._lastname = value;
					this.SendPropertyChanged("lastname");
					this.OnlastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profile_image", DbType="VarChar(255)")]
		public string profile_image
		{
			get
			{
				return this._profile_image;
			}
			set
			{
				if ((this._profile_image != value))
				{
					this.Onprofile_imageChanging(value);
					this.SendPropertyChanging();
					this._profile_image = value;
					this.SendPropertyChanged("profile_image");
					this.Onprofile_imageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rol_name", DbType="VarChar(50)")]
		public string rol_name
		{
			get
			{
				return this._rol_name;
			}
			set
			{
				if ((this._rol_name != value))
				{
					if (this._Rol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrol_nameChanging(value);
					this.SendPropertyChanging();
					this._rol_name = value;
					this.SendPropertyChanged("rol_name");
					this.Onrol_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ProjectGroup", Storage="_ProjectGroups", ThisKey="id", OtherKey="tutor_user_id")]
		public EntitySet<ProjectGroup> ProjectGroups
		{
			get
			{
				return this._ProjectGroups;
			}
			set
			{
				this._ProjectGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ProjectMember", Storage="_ProjectMembers", ThisKey="id", OtherKey="student_user_id")]
		public EntitySet<ProjectMember> ProjectMembers
		{
			get
			{
				return this._ProjectMembers;
			}
			set
			{
				this._ProjectMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ProjectOwner", Storage="_ProjectOwners", ThisKey="id", OtherKey="user_id")]
		public EntitySet<ProjectOwner> ProjectOwners
		{
			get
			{
				return this._ProjectOwners;
			}
			set
			{
				this._ProjectOwners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Report", Storage="_Reports", ThisKey="id", OtherKey="reporter_id")]
		public EntitySet<Report> Reports
		{
			get
			{
				return this._Reports;
			}
			set
			{
				this._Reports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Report1", Storage="_Reports1", ThisKey="id", OtherKey="subject_id")]
		public EntitySet<Report> Reports1
		{
			get
			{
				return this._Reports1;
			}
			set
			{
				this._Reports1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_User", Storage="_Rol", ThisKey="rol_name", OtherKey="name", IsForeignKey=true)]
		public Rol Rol
		{
			get
			{
				return this._Rol.Entity;
			}
			set
			{
				Rol previousValue = this._Rol.Entity;
				if (((previousValue != value) 
							|| (this._Rol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rol.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Rol.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._rol_name = value.name;
					}
					else
					{
						this._rol_name = default(string);
					}
					this.SendPropertyChanged("Rol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProjectGroups(ProjectGroup entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ProjectGroups(ProjectGroup entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ProjectMembers(ProjectMember entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ProjectMembers(ProjectMember entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ProjectOwners(ProjectOwner entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ProjectOwners(ProjectOwner entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Reports(Report entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Reports(Report entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Reports1(Report entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Reports1(Report entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
	}
	
	public partial class get_student_procedureResult
	{
		
		private string _Naam;
		
		private System.Nullable<int> _Eindcijfer;
		
		public get_student_procedureResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="VarChar(50)")]
		public string Naam
		{
			get
			{
				return this._Naam;
			}
			set
			{
				if ((this._Naam != value))
				{
					this._Naam = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Eindcijfer", DbType="Int")]
		public System.Nullable<int> Eindcijfer
		{
			get
			{
				return this._Eindcijfer;
			}
			set
			{
				if ((this._Eindcijfer != value))
				{
					this._Eindcijfer = value;
				}
			}
		}
	}
	
	public partial class GetProjectIDResult
	{
		
		private int _project_id;
		
		public GetProjectIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_id", DbType="Int NOT NULL")]
		public int project_id
		{
			get
			{
				return this._project_id;
			}
			set
			{
				if ((this._project_id != value))
				{
					this._project_id = value;
				}
			}
		}
	}
	
	public partial class GetProjectResult
	{
		
		private int _project_id;
		
		public GetProjectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_id", DbType="Int NOT NULL")]
		public int project_id
		{
			get
			{
				return this._project_id;
			}
			set
			{
				if ((this._project_id != value))
				{
					this._project_id = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
