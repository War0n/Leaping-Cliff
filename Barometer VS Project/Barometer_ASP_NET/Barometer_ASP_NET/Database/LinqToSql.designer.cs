#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Barometer_ASP_NET.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LeapingCliff")]
	public partial class LinqToSqlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertbaro_aspect(baro_aspect instance);
    partial void Updatebaro_aspect(baro_aspect instance);
    partial void Deletebaro_aspect(baro_aspect instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    partial void Insertbaro_template(baro_template instance);
    partial void Updatebaro_template(baro_template instance);
    partial void Deletebaro_template(baro_template instance);
    partial void Insertproject(project instance);
    partial void Updateproject(project instance);
    partial void Deleteproject(project instance);
    partial void Insertproject_group(project_group instance);
    partial void Updateproject_group(project_group instance);
    partial void Deleteproject_group(project_group instance);
    partial void Insertproject_member(project_member instance);
    partial void Updateproject_member(project_member instance);
    partial void Deleteproject_member(project_member instance);
    partial void Insertproject_owner(project_owner instance);
    partial void Updateproject_owner(project_owner instance);
    partial void Deleteproject_owner(project_owner instance);
    partial void Insertproject_report_date(project_report_date instance);
    partial void Updateproject_report_date(project_report_date instance);
    partial void Deleteproject_report_date(project_report_date instance);
    partial void Insertreport(report instance);
    partial void Updatereport(report instance);
    partial void Deletereport(report instance);
    partial void Insertrol(rol instance);
    partial void Updaterol(rol instance);
    partial void Deleterol(rol instance);
    #endregion
		
		public LinqToSqlDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["LeapingCliffConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<baro_aspect> baro_aspects
		{
			get
			{
				return this.GetTable<baro_aspect>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
		
		public System.Data.Linq.Table<baro_template> baro_templates
		{
			get
			{
				return this.GetTable<baro_template>();
			}
		}
		
		public System.Data.Linq.Table<project> projects
		{
			get
			{
				return this.GetTable<project>();
			}
		}
		
		public System.Data.Linq.Table<project_group> project_groups
		{
			get
			{
				return this.GetTable<project_group>();
			}
		}
		
		public System.Data.Linq.Table<project_member> project_members
		{
			get
			{
				return this.GetTable<project_member>();
			}
		}
		
		public System.Data.Linq.Table<project_owner> project_owners
		{
			get
			{
				return this.GetTable<project_owner>();
			}
		}
		
		public System.Data.Linq.Table<project_report_date> project_report_dates
		{
			get
			{
				return this.GetTable<project_report_date>();
			}
		}
		
		public System.Data.Linq.Table<report> reports
		{
			get
			{
				return this.GetTable<report>();
			}
		}
		
		public System.Data.Linq.Table<rol> rols
		{
			get
			{
				return this.GetTable<rol>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.baro_aspect")]
	public partial class baro_aspect : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _parent_id;
		
		private int _baro_template_id;
		
		private System.Nullable<byte> _is_head_aspect;
		
		private System.Nullable<byte> _can_be_filled;
		
		private string _name;
		
		private string _desription;
		
		private EntitySet<baro_aspect> _baro_aspects;
		
		private EntitySet<report> _reports;
		
		private EntityRef<baro_aspect> _baro_aspect1;
		
		private EntityRef<baro_template> _baro_template;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onparent_idChanging(System.Nullable<int> value);
    partial void Onparent_idChanged();
    partial void Onbaro_template_idChanging(int value);
    partial void Onbaro_template_idChanged();
    partial void Onis_head_aspectChanging(System.Nullable<byte> value);
    partial void Onis_head_aspectChanged();
    partial void Oncan_be_filledChanging(System.Nullable<byte> value);
    partial void Oncan_be_filledChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndesriptionChanging(string value);
    partial void OndesriptionChanged();
    #endregion
		
		public baro_aspect()
		{
			this._baro_aspects = new EntitySet<baro_aspect>(new Action<baro_aspect>(this.attach_baro_aspects), new Action<baro_aspect>(this.detach_baro_aspects));
			this._reports = new EntitySet<report>(new Action<report>(this.attach_reports), new Action<report>(this.detach_reports));
			this._baro_aspect1 = default(EntityRef<baro_aspect>);
			this._baro_template = default(EntityRef<baro_template>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent_id", DbType="Int")]
		public System.Nullable<int> parent_id
		{
			get
			{
				return this._parent_id;
			}
			set
			{
				if ((this._parent_id != value))
				{
					if (this._baro_aspect1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onparent_idChanging(value);
					this.SendPropertyChanging();
					this._parent_id = value;
					this.SendPropertyChanged("parent_id");
					this.Onparent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baro_template_id", DbType="Int NOT NULL")]
		public int baro_template_id
		{
			get
			{
				return this._baro_template_id;
			}
			set
			{
				if ((this._baro_template_id != value))
				{
					if (this._baro_template.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbaro_template_idChanging(value);
					this.SendPropertyChanging();
					this._baro_template_id = value;
					this.SendPropertyChanged("baro_template_id");
					this.Onbaro_template_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_head_aspect", DbType="TinyInt")]
		public System.Nullable<byte> is_head_aspect
		{
			get
			{
				return this._is_head_aspect;
			}
			set
			{
				if ((this._is_head_aspect != value))
				{
					this.Onis_head_aspectChanging(value);
					this.SendPropertyChanging();
					this._is_head_aspect = value;
					this.SendPropertyChanged("is_head_aspect");
					this.Onis_head_aspectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_can_be_filled", DbType="TinyInt")]
		public System.Nullable<byte> can_be_filled
		{
			get
			{
				return this._can_be_filled;
			}
			set
			{
				if ((this._can_be_filled != value))
				{
					this.Oncan_be_filledChanging(value);
					this.SendPropertyChanging();
					this._can_be_filled = value;
					this.SendPropertyChanged("can_be_filled");
					this.Oncan_be_filledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_desription", DbType="VarChar(50)")]
		public string desription
		{
			get
			{
				return this._desription;
			}
			set
			{
				if ((this._desription != value))
				{
					this.OndesriptionChanging(value);
					this.SendPropertyChanging();
					this._desription = value;
					this.SendPropertyChanged("desription");
					this.OndesriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="baro_aspect_baro_aspect", Storage="_baro_aspects", ThisKey="id", OtherKey="parent_id")]
		public EntitySet<baro_aspect> baro_aspects
		{
			get
			{
				return this._baro_aspects;
			}
			set
			{
				this._baro_aspects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="baro_aspect_report", Storage="_reports", ThisKey="id", OtherKey="baro_aspect_id")]
		public EntitySet<report> reports
		{
			get
			{
				return this._reports;
			}
			set
			{
				this._reports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="baro_aspect_baro_aspect", Storage="_baro_aspect1", ThisKey="parent_id", OtherKey="id", IsForeignKey=true)]
		public baro_aspect baro_aspect1
		{
			get
			{
				return this._baro_aspect1.Entity;
			}
			set
			{
				baro_aspect previousValue = this._baro_aspect1.Entity;
				if (((previousValue != value) 
							|| (this._baro_aspect1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._baro_aspect1.Entity = null;
						previousValue.baro_aspects.Remove(this);
					}
					this._baro_aspect1.Entity = value;
					if ((value != null))
					{
						value.baro_aspects.Add(this);
						this._parent_id = value.id;
					}
					else
					{
						this._parent_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("baro_aspect1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="baro_template_baro_aspect", Storage="_baro_template", ThisKey="baro_template_id", OtherKey="id", IsForeignKey=true)]
		public baro_template baro_template
		{
			get
			{
				return this._baro_template.Entity;
			}
			set
			{
				baro_template previousValue = this._baro_template.Entity;
				if (((previousValue != value) 
							|| (this._baro_template.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._baro_template.Entity = null;
						previousValue.baro_aspects.Remove(this);
					}
					this._baro_template.Entity = value;
					if ((value != null))
					{
						value.baro_aspects.Add(this);
						this._baro_template_id = value.id;
					}
					else
					{
						this._baro_template_id = default(int);
					}
					this.SendPropertyChanged("baro_template");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_baro_aspects(baro_aspect entity)
		{
			this.SendPropertyChanging();
			entity.baro_aspect1 = this;
		}
		
		private void detach_baro_aspects(baro_aspect entity)
		{
			this.SendPropertyChanging();
			entity.baro_aspect1 = null;
		}
		
		private void attach_reports(report entity)
		{
			this.SendPropertyChanging();
			entity.baro_aspect = this;
		}
		
		private void detach_reports(report entity)
		{
			this.SendPropertyChanging();
			entity.baro_aspect = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[user]")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _student_number;
		
		private string _firstname;
		
		private string _lastname;
		
		private string _profile_image;
		
		private string _email;
		
		private string _rol_name;
		
		private EntitySet<project_group> _project_groups;
		
		private EntitySet<project_member> _project_members;
		
		private EntitySet<project_owner> _project_owners;
		
		private EntitySet<report> _reports;
		
		private EntitySet<report> _reports1;
		
		private EntityRef<rol> _rol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onstudent_numberChanging(System.Nullable<int> value);
    partial void Onstudent_numberChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void Onprofile_imageChanging(string value);
    partial void Onprofile_imageChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onrol_nameChanging(string value);
    partial void Onrol_nameChanged();
    #endregion
		
		public user()
		{
			this._project_groups = new EntitySet<project_group>(new Action<project_group>(this.attach_project_groups), new Action<project_group>(this.detach_project_groups));
			this._project_members = new EntitySet<project_member>(new Action<project_member>(this.attach_project_members), new Action<project_member>(this.detach_project_members));
			this._project_owners = new EntitySet<project_owner>(new Action<project_owner>(this.attach_project_owners), new Action<project_owner>(this.detach_project_owners));
			this._reports = new EntitySet<report>(new Action<report>(this.attach_reports), new Action<report>(this.detach_reports));
			this._reports1 = new EntitySet<report>(new Action<report>(this.attach_reports1), new Action<report>(this.detach_reports1));
			this._rol = default(EntityRef<rol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_number", DbType="Int")]
		public System.Nullable<int> student_number
		{
			get
			{
				return this._student_number;
			}
			set
			{
				if ((this._student_number != value))
				{
					this.Onstudent_numberChanging(value);
					this.SendPropertyChanging();
					this._student_number = value;
					this.SendPropertyChanged("student_number");
					this.Onstudent_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="VarChar(50)")]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this.OnfirstnameChanging(value);
					this.SendPropertyChanging();
					this._firstname = value;
					this.SendPropertyChanged("firstname");
					this.OnfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="VarChar(50)")]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this.OnlastnameChanging(value);
					this.SendPropertyChanging();
					this._lastname = value;
					this.SendPropertyChanged("lastname");
					this.OnlastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profile_image", DbType="VarChar(255)")]
		public string profile_image
		{
			get
			{
				return this._profile_image;
			}
			set
			{
				if ((this._profile_image != value))
				{
					this.Onprofile_imageChanging(value);
					this.SendPropertyChanging();
					this._profile_image = value;
					this.SendPropertyChanged("profile_image");
					this.Onprofile_imageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rol_name", DbType="VarChar(50)")]
		public string rol_name
		{
			get
			{
				return this._rol_name;
			}
			set
			{
				if ((this._rol_name != value))
				{
					if (this._rol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrol_nameChanging(value);
					this.SendPropertyChanging();
					this._rol_name = value;
					this.SendPropertyChanged("rol_name");
					this.Onrol_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_project_group", Storage="_project_groups", ThisKey="id", OtherKey="tutor_user_id")]
		public EntitySet<project_group> project_groups
		{
			get
			{
				return this._project_groups;
			}
			set
			{
				this._project_groups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_project_member", Storage="_project_members", ThisKey="id", OtherKey="student_user_id")]
		public EntitySet<project_member> project_members
		{
			get
			{
				return this._project_members;
			}
			set
			{
				this._project_members.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_project_owner", Storage="_project_owners", ThisKey="id", OtherKey="user_id")]
		public EntitySet<project_owner> project_owners
		{
			get
			{
				return this._project_owners;
			}
			set
			{
				this._project_owners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_report", Storage="_reports", ThisKey="id", OtherKey="reporter_id")]
		public EntitySet<report> reports
		{
			get
			{
				return this._reports;
			}
			set
			{
				this._reports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_report1", Storage="_reports1", ThisKey="id", OtherKey="subject_id")]
		public EntitySet<report> reports1
		{
			get
			{
				return this._reports1;
			}
			set
			{
				this._reports1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rol_user", Storage="_rol", ThisKey="rol_name", OtherKey="name", IsForeignKey=true)]
		public rol rol
		{
			get
			{
				return this._rol.Entity;
			}
			set
			{
				rol previousValue = this._rol.Entity;
				if (((previousValue != value) 
							|| (this._rol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._rol.Entity = null;
						previousValue.users.Remove(this);
					}
					this._rol.Entity = value;
					if ((value != null))
					{
						value.users.Add(this);
						this._rol_name = value.name;
					}
					else
					{
						this._rol_name = default(string);
					}
					this.SendPropertyChanged("rol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_project_groups(project_group entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_project_groups(project_group entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_project_members(project_member entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_project_members(project_member entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_project_owners(project_owner entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_project_owners(project_owner entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_reports(report entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_reports(report entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_reports1(report entity)
		{
			this.SendPropertyChanging();
			entity.user1 = this;
		}
		
		private void detach_reports1(report entity)
		{
			this.SendPropertyChanging();
			entity.user1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.baro_template")]
	public partial class baro_template : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _template_name;
		
		private System.Nullable<byte> _rating_type;
		
		private System.Nullable<byte> _anonymous;
		
		private EntitySet<baro_aspect> _baro_aspects;
		
		private EntitySet<project> _projects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ontemplate_nameChanging(string value);
    partial void Ontemplate_nameChanged();
    partial void Onrating_typeChanging(System.Nullable<byte> value);
    partial void Onrating_typeChanged();
    partial void OnanonymousChanging(System.Nullable<byte> value);
    partial void OnanonymousChanged();
    #endregion
		
		public baro_template()
		{
			this._baro_aspects = new EntitySet<baro_aspect>(new Action<baro_aspect>(this.attach_baro_aspects), new Action<baro_aspect>(this.detach_baro_aspects));
			this._projects = new EntitySet<project>(new Action<project>(this.attach_projects), new Action<project>(this.detach_projects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_template_name", DbType="VarChar(50)")]
		public string template_name
		{
			get
			{
				return this._template_name;
			}
			set
			{
				if ((this._template_name != value))
				{
					this.Ontemplate_nameChanging(value);
					this.SendPropertyChanging();
					this._template_name = value;
					this.SendPropertyChanged("template_name");
					this.Ontemplate_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rating_type", DbType="TinyInt")]
		public System.Nullable<byte> rating_type
		{
			get
			{
				return this._rating_type;
			}
			set
			{
				if ((this._rating_type != value))
				{
					this.Onrating_typeChanging(value);
					this.SendPropertyChanging();
					this._rating_type = value;
					this.SendPropertyChanged("rating_type");
					this.Onrating_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_anonymous", DbType="TinyInt")]
		public System.Nullable<byte> anonymous
		{
			get
			{
				return this._anonymous;
			}
			set
			{
				if ((this._anonymous != value))
				{
					this.OnanonymousChanging(value);
					this.SendPropertyChanging();
					this._anonymous = value;
					this.SendPropertyChanged("anonymous");
					this.OnanonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="baro_template_baro_aspect", Storage="_baro_aspects", ThisKey="id", OtherKey="baro_template_id")]
		public EntitySet<baro_aspect> baro_aspects
		{
			get
			{
				return this._baro_aspects;
			}
			set
			{
				this._baro_aspects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="baro_template_project", Storage="_projects", ThisKey="id", OtherKey="baro_template_id")]
		public EntitySet<project> projects
		{
			get
			{
				return this._projects;
			}
			set
			{
				this._projects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_baro_aspects(baro_aspect entity)
		{
			this.SendPropertyChanging();
			entity.baro_template = this;
		}
		
		private void detach_baro_aspects(baro_aspect entity)
		{
			this.SendPropertyChanging();
			entity.baro_template = null;
		}
		
		private void attach_projects(project entity)
		{
			this.SendPropertyChanging();
			entity.baro_template = this;
		}
		
		private void detach_projects(project entity)
		{
			this.SendPropertyChanging();
			entity.baro_template = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.project")]
	public partial class project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _description;
		
		private string _blok;
		
		private System.Nullable<System.DateTime> _start_date;
		
		private System.Nullable<System.DateTime> _end_date;
		
		private System.Nullable<int> _baro_template_id;
		
		private EntitySet<project_group> _project_groups;
		
		private EntitySet<project_owner> _project_owners;
		
		private EntitySet<project_report_date> _project_report_dates;
		
		private EntityRef<baro_template> _baro_template;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnblokChanging(string value);
    partial void OnblokChanged();
    partial void Onstart_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onstart_dateChanged();
    partial void Onend_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onend_dateChanged();
    partial void Onbaro_template_idChanging(System.Nullable<int> value);
    partial void Onbaro_template_idChanged();
    #endregion
		
		public project()
		{
			this._project_groups = new EntitySet<project_group>(new Action<project_group>(this.attach_project_groups), new Action<project_group>(this.detach_project_groups));
			this._project_owners = new EntitySet<project_owner>(new Action<project_owner>(this.attach_project_owners), new Action<project_owner>(this.detach_project_owners));
			this._project_report_dates = new EntitySet<project_report_date>(new Action<project_report_date>(this.attach_project_report_dates), new Action<project_report_date>(this.detach_project_report_dates));
			this._baro_template = default(EntityRef<baro_template>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(50)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blok", DbType="VarChar(50)")]
		public string blok
		{
			get
			{
				return this._blok;
			}
			set
			{
				if ((this._blok != value))
				{
					this.OnblokChanging(value);
					this.SendPropertyChanging();
					this._blok = value;
					this.SendPropertyChanged("blok");
					this.OnblokChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_date", DbType="Date")]
		public System.Nullable<System.DateTime> start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_date", DbType="Date")]
		public System.Nullable<System.DateTime> end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baro_template_id", DbType="Int")]
		public System.Nullable<int> baro_template_id
		{
			get
			{
				return this._baro_template_id;
			}
			set
			{
				if ((this._baro_template_id != value))
				{
					if (this._baro_template.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbaro_template_idChanging(value);
					this.SendPropertyChanging();
					this._baro_template_id = value;
					this.SendPropertyChanged("baro_template_id");
					this.Onbaro_template_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_project_group", Storage="_project_groups", ThisKey="id", OtherKey="project_id")]
		public EntitySet<project_group> project_groups
		{
			get
			{
				return this._project_groups;
			}
			set
			{
				this._project_groups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_project_owner", Storage="_project_owners", ThisKey="id", OtherKey="project_id")]
		public EntitySet<project_owner> project_owners
		{
			get
			{
				return this._project_owners;
			}
			set
			{
				this._project_owners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_project_report_date", Storage="_project_report_dates", ThisKey="id", OtherKey="project_id_int")]
		public EntitySet<project_report_date> project_report_dates
		{
			get
			{
				return this._project_report_dates;
			}
			set
			{
				this._project_report_dates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="baro_template_project", Storage="_baro_template", ThisKey="baro_template_id", OtherKey="id", IsForeignKey=true)]
		public baro_template baro_template
		{
			get
			{
				return this._baro_template.Entity;
			}
			set
			{
				baro_template previousValue = this._baro_template.Entity;
				if (((previousValue != value) 
							|| (this._baro_template.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._baro_template.Entity = null;
						previousValue.projects.Remove(this);
					}
					this._baro_template.Entity = value;
					if ((value != null))
					{
						value.projects.Add(this);
						this._baro_template_id = value.id;
					}
					else
					{
						this._baro_template_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("baro_template");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_project_groups(project_group entity)
		{
			this.SendPropertyChanging();
			entity.project = this;
		}
		
		private void detach_project_groups(project_group entity)
		{
			this.SendPropertyChanging();
			entity.project = null;
		}
		
		private void attach_project_owners(project_owner entity)
		{
			this.SendPropertyChanging();
			entity.project = this;
		}
		
		private void detach_project_owners(project_owner entity)
		{
			this.SendPropertyChanging();
			entity.project = null;
		}
		
		private void attach_project_report_dates(project_report_date entity)
		{
			this.SendPropertyChanging();
			entity.project = this;
		}
		
		private void detach_project_report_dates(project_report_date entity)
		{
			this.SendPropertyChanging();
			entity.project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.project_group")]
	public partial class project_group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _group_code;
		
		private System.Nullable<int> _group_end_grade;
		
		private System.Nullable<int> _tutor_user_id;
		
		private int _project_id;
		
		private EntitySet<project_member> _project_members;
		
		private EntityRef<project> _project;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ongroup_codeChanging(string value);
    partial void Ongroup_codeChanged();
    partial void Ongroup_end_gradeChanging(System.Nullable<int> value);
    partial void Ongroup_end_gradeChanged();
    partial void Ontutor_user_idChanging(System.Nullable<int> value);
    partial void Ontutor_user_idChanged();
    partial void Onproject_idChanging(int value);
    partial void Onproject_idChanged();
    #endregion
		
		public project_group()
		{
			this._project_members = new EntitySet<project_member>(new Action<project_member>(this.attach_project_members), new Action<project_member>(this.detach_project_members));
			this._project = default(EntityRef<project>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_code", DbType="VarChar(50)")]
		public string group_code
		{
			get
			{
				return this._group_code;
			}
			set
			{
				if ((this._group_code != value))
				{
					this.Ongroup_codeChanging(value);
					this.SendPropertyChanging();
					this._group_code = value;
					this.SendPropertyChanged("group_code");
					this.Ongroup_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_end_grade", DbType="Int")]
		public System.Nullable<int> group_end_grade
		{
			get
			{
				return this._group_end_grade;
			}
			set
			{
				if ((this._group_end_grade != value))
				{
					this.Ongroup_end_gradeChanging(value);
					this.SendPropertyChanging();
					this._group_end_grade = value;
					this.SendPropertyChanged("group_end_grade");
					this.Ongroup_end_gradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tutor_user_id", DbType="Int")]
		public System.Nullable<int> tutor_user_id
		{
			get
			{
				return this._tutor_user_id;
			}
			set
			{
				if ((this._tutor_user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontutor_user_idChanging(value);
					this.SendPropertyChanging();
					this._tutor_user_id = value;
					this.SendPropertyChanged("tutor_user_id");
					this.Ontutor_user_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_id", DbType="Int NOT NULL")]
		public int project_id
		{
			get
			{
				return this._project_id;
			}
			set
			{
				if ((this._project_id != value))
				{
					if (this._project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproject_idChanging(value);
					this.SendPropertyChanging();
					this._project_id = value;
					this.SendPropertyChanged("project_id");
					this.Onproject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_group_project_member", Storage="_project_members", ThisKey="id", OtherKey="project_group_id")]
		public EntitySet<project_member> project_members
		{
			get
			{
				return this._project_members;
			}
			set
			{
				this._project_members.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_project_group", Storage="_project", ThisKey="project_id", OtherKey="id", IsForeignKey=true)]
		public project project
		{
			get
			{
				return this._project.Entity;
			}
			set
			{
				project previousValue = this._project.Entity;
				if (((previousValue != value) 
							|| (this._project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._project.Entity = null;
						previousValue.project_groups.Remove(this);
					}
					this._project.Entity = value;
					if ((value != null))
					{
						value.project_groups.Add(this);
						this._project_id = value.id;
					}
					else
					{
						this._project_id = default(int);
					}
					this.SendPropertyChanged("project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_project_group", Storage="_user", ThisKey="tutor_user_id", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.project_groups.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.project_groups.Add(this);
						this._tutor_user_id = value.id;
					}
					else
					{
						this._tutor_user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_project_members(project_member entity)
		{
			this.SendPropertyChanging();
			entity.project_group = this;
		}
		
		private void detach_project_members(project_member entity)
		{
			this.SendPropertyChanging();
			entity.project_group = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.project_member")]
	public partial class project_member : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _project_group_id;
		
		private int _student_user_id;
		
		private System.Nullable<int> _end_grade;
		
		private EntityRef<project_group> _project_group;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onproject_group_idChanging(int value);
    partial void Onproject_group_idChanged();
    partial void Onstudent_user_idChanging(int value);
    partial void Onstudent_user_idChanged();
    partial void Onend_gradeChanging(System.Nullable<int> value);
    partial void Onend_gradeChanged();
    #endregion
		
		public project_member()
		{
			this._project_group = default(EntityRef<project_group>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_group_id", DbType="Int NOT NULL")]
		public int project_group_id
		{
			get
			{
				return this._project_group_id;
			}
			set
			{
				if ((this._project_group_id != value))
				{
					if (this._project_group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproject_group_idChanging(value);
					this.SendPropertyChanging();
					this._project_group_id = value;
					this.SendPropertyChanged("project_group_id");
					this.Onproject_group_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_user_id", DbType="Int NOT NULL")]
		public int student_user_id
		{
			get
			{
				return this._student_user_id;
			}
			set
			{
				if ((this._student_user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstudent_user_idChanging(value);
					this.SendPropertyChanging();
					this._student_user_id = value;
					this.SendPropertyChanged("student_user_id");
					this.Onstudent_user_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_grade", DbType="Int")]
		public System.Nullable<int> end_grade
		{
			get
			{
				return this._end_grade;
			}
			set
			{
				if ((this._end_grade != value))
				{
					this.Onend_gradeChanging(value);
					this.SendPropertyChanging();
					this._end_grade = value;
					this.SendPropertyChanged("end_grade");
					this.Onend_gradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_group_project_member", Storage="_project_group", ThisKey="project_group_id", OtherKey="id", IsForeignKey=true)]
		public project_group project_group
		{
			get
			{
				return this._project_group.Entity;
			}
			set
			{
				project_group previousValue = this._project_group.Entity;
				if (((previousValue != value) 
							|| (this._project_group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._project_group.Entity = null;
						previousValue.project_members.Remove(this);
					}
					this._project_group.Entity = value;
					if ((value != null))
					{
						value.project_members.Add(this);
						this._project_group_id = value.id;
					}
					else
					{
						this._project_group_id = default(int);
					}
					this.SendPropertyChanged("project_group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_project_member", Storage="_user", ThisKey="student_user_id", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.project_members.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.project_members.Add(this);
						this._student_user_id = value.id;
					}
					else
					{
						this._student_user_id = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.project_owner")]
	public partial class project_owner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _user_id;
		
		private int _project_id;
		
		private EntityRef<project> _project;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onproject_idChanging(int value);
    partial void Onproject_idChanged();
    #endregion
		
		public project_owner()
		{
			this._project = default(EntityRef<project>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_id", DbType="Int NOT NULL")]
		public int project_id
		{
			get
			{
				return this._project_id;
			}
			set
			{
				if ((this._project_id != value))
				{
					if (this._project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproject_idChanging(value);
					this.SendPropertyChanging();
					this._project_id = value;
					this.SendPropertyChanged("project_id");
					this.Onproject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_project_owner", Storage="_project", ThisKey="project_id", OtherKey="id", IsForeignKey=true)]
		public project project
		{
			get
			{
				return this._project.Entity;
			}
			set
			{
				project previousValue = this._project.Entity;
				if (((previousValue != value) 
							|| (this._project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._project.Entity = null;
						previousValue.project_owners.Remove(this);
					}
					this._project.Entity = value;
					if ((value != null))
					{
						value.project_owners.Add(this);
						this._project_id = value.id;
					}
					else
					{
						this._project_id = default(int);
					}
					this.SendPropertyChanged("project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_project_owner", Storage="_user", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.project_owners.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.project_owners.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.project_report_date")]
	public partial class project_report_date : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _project_id_int;
		
		private System.Nullable<byte> _is_endreport;
		
		private string _week_label;
		
		private System.Nullable<System.DateTime> _start_date;
		
		private System.Nullable<System.DateTime> _end_date;
		
		private EntitySet<report> _reports;
		
		private EntityRef<project> _project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onproject_id_intChanging(int value);
    partial void Onproject_id_intChanged();
    partial void Onis_endreportChanging(System.Nullable<byte> value);
    partial void Onis_endreportChanged();
    partial void Onweek_labelChanging(string value);
    partial void Onweek_labelChanged();
    partial void Onstart_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onstart_dateChanged();
    partial void Onend_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onend_dateChanged();
    #endregion
		
		public project_report_date()
		{
			this._reports = new EntitySet<report>(new Action<report>(this.attach_reports), new Action<report>(this.detach_reports));
			this._project = default(EntityRef<project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_id_int", DbType="Int NOT NULL")]
		public int project_id_int
		{
			get
			{
				return this._project_id_int;
			}
			set
			{
				if ((this._project_id_int != value))
				{
					if (this._project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproject_id_intChanging(value);
					this.SendPropertyChanging();
					this._project_id_int = value;
					this.SendPropertyChanged("project_id_int");
					this.Onproject_id_intChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_endreport", DbType="TinyInt")]
		public System.Nullable<byte> is_endreport
		{
			get
			{
				return this._is_endreport;
			}
			set
			{
				if ((this._is_endreport != value))
				{
					this.Onis_endreportChanging(value);
					this.SendPropertyChanging();
					this._is_endreport = value;
					this.SendPropertyChanged("is_endreport");
					this.Onis_endreportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_week_label", DbType="VarChar(30)")]
		public string week_label
		{
			get
			{
				return this._week_label;
			}
			set
			{
				if ((this._week_label != value))
				{
					this.Onweek_labelChanging(value);
					this.SendPropertyChanging();
					this._week_label = value;
					this.SendPropertyChanged("week_label");
					this.Onweek_labelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_report_date_report", Storage="_reports", ThisKey="id", OtherKey="project_report_date_id")]
		public EntitySet<report> reports
		{
			get
			{
				return this._reports;
			}
			set
			{
				this._reports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_project_report_date", Storage="_project", ThisKey="project_id_int", OtherKey="id", IsForeignKey=true)]
		public project project
		{
			get
			{
				return this._project.Entity;
			}
			set
			{
				project previousValue = this._project.Entity;
				if (((previousValue != value) 
							|| (this._project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._project.Entity = null;
						previousValue.project_report_dates.Remove(this);
					}
					this._project.Entity = value;
					if ((value != null))
					{
						value.project_report_dates.Add(this);
						this._project_id_int = value.id;
					}
					else
					{
						this._project_id_int = default(int);
					}
					this.SendPropertyChanged("project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_reports(report entity)
		{
			this.SendPropertyChanging();
			entity.project_report_date = this;
		}
		
		private void detach_reports(report entity)
		{
			this.SendPropertyChanging();
			entity.project_report_date = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.report")]
	public partial class report : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _reporter_id;
		
		private int _subject_id;
		
		private int _project_report_date_id;
		
		private int _baro_aspect_id;
		
		private System.Nullable<int> _grade;
		
		private string _comment;
		
		private EntityRef<baro_aspect> _baro_aspect;
		
		private EntityRef<project_report_date> _project_report_date;
		
		private EntityRef<user> _user;
		
		private EntityRef<user> _user1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onreporter_idChanging(int value);
    partial void Onreporter_idChanged();
    partial void Onsubject_idChanging(int value);
    partial void Onsubject_idChanged();
    partial void Onproject_report_date_idChanging(int value);
    partial void Onproject_report_date_idChanged();
    partial void Onbaro_aspect_idChanging(int value);
    partial void Onbaro_aspect_idChanged();
    partial void OngradeChanging(System.Nullable<int> value);
    partial void OngradeChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    #endregion
		
		public report()
		{
			this._baro_aspect = default(EntityRef<baro_aspect>);
			this._project_report_date = default(EntityRef<project_report_date>);
			this._user = default(EntityRef<user>);
			this._user1 = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reporter_id", DbType="Int NOT NULL")]
		public int reporter_id
		{
			get
			{
				return this._reporter_id;
			}
			set
			{
				if ((this._reporter_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onreporter_idChanging(value);
					this.SendPropertyChanging();
					this._reporter_id = value;
					this.SendPropertyChanged("reporter_id");
					this.Onreporter_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject_id", DbType="Int NOT NULL")]
		public int subject_id
		{
			get
			{
				return this._subject_id;
			}
			set
			{
				if ((this._subject_id != value))
				{
					if (this._user1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsubject_idChanging(value);
					this.SendPropertyChanging();
					this._subject_id = value;
					this.SendPropertyChanged("subject_id");
					this.Onsubject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_report_date_id", DbType="Int NOT NULL")]
		public int project_report_date_id
		{
			get
			{
				return this._project_report_date_id;
			}
			set
			{
				if ((this._project_report_date_id != value))
				{
					if (this._project_report_date.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproject_report_date_idChanging(value);
					this.SendPropertyChanging();
					this._project_report_date_id = value;
					this.SendPropertyChanged("project_report_date_id");
					this.Onproject_report_date_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baro_aspect_id", DbType="Int NOT NULL")]
		public int baro_aspect_id
		{
			get
			{
				return this._baro_aspect_id;
			}
			set
			{
				if ((this._baro_aspect_id != value))
				{
					if (this._baro_aspect.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbaro_aspect_idChanging(value);
					this.SendPropertyChanging();
					this._baro_aspect_id = value;
					this.SendPropertyChanged("baro_aspect_id");
					this.Onbaro_aspect_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grade", DbType="Int")]
		public System.Nullable<int> grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if ((this._grade != value))
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="baro_aspect_report", Storage="_baro_aspect", ThisKey="baro_aspect_id", OtherKey="id", IsForeignKey=true)]
		public baro_aspect baro_aspect
		{
			get
			{
				return this._baro_aspect.Entity;
			}
			set
			{
				baro_aspect previousValue = this._baro_aspect.Entity;
				if (((previousValue != value) 
							|| (this._baro_aspect.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._baro_aspect.Entity = null;
						previousValue.reports.Remove(this);
					}
					this._baro_aspect.Entity = value;
					if ((value != null))
					{
						value.reports.Add(this);
						this._baro_aspect_id = value.id;
					}
					else
					{
						this._baro_aspect_id = default(int);
					}
					this.SendPropertyChanged("baro_aspect");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_report_date_report", Storage="_project_report_date", ThisKey="project_report_date_id", OtherKey="id", IsForeignKey=true)]
		public project_report_date project_report_date
		{
			get
			{
				return this._project_report_date.Entity;
			}
			set
			{
				project_report_date previousValue = this._project_report_date.Entity;
				if (((previousValue != value) 
							|| (this._project_report_date.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._project_report_date.Entity = null;
						previousValue.reports.Remove(this);
					}
					this._project_report_date.Entity = value;
					if ((value != null))
					{
						value.reports.Add(this);
						this._project_report_date_id = value.id;
					}
					else
					{
						this._project_report_date_id = default(int);
					}
					this.SendPropertyChanged("project_report_date");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_report", Storage="_user", ThisKey="reporter_id", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.reports.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.reports.Add(this);
						this._reporter_id = value.id;
					}
					else
					{
						this._reporter_id = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_report1", Storage="_user1", ThisKey="subject_id", OtherKey="id", IsForeignKey=true)]
		public user user1
		{
			get
			{
				return this._user1.Entity;
			}
			set
			{
				user previousValue = this._user1.Entity;
				if (((previousValue != value) 
							|| (this._user1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user1.Entity = null;
						previousValue.reports1.Remove(this);
					}
					this._user1.Entity = value;
					if ((value != null))
					{
						value.reports1.Add(this);
						this._subject_id = value.id;
					}
					else
					{
						this._subject_id = default(int);
					}
					this.SendPropertyChanged("user1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.rol")]
	public partial class rol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _name;
		
		private EntitySet<user> _users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public rol()
		{
			this._users = new EntitySet<user>(new Action<user>(this.attach_users), new Action<user>(this.detach_users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rol_user", Storage="_users", ThisKey="name", OtherKey="rol_name")]
		public EntitySet<user> users
		{
			get
			{
				return this._users;
			}
			set
			{
				this._users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.rol = this;
		}
		
		private void detach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.rol = null;
		}
	}
}
#pragma warning restore 1591
